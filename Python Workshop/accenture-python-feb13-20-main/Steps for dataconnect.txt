Steps:
------

step 0 . install mysql.connector by executing below command at the
command prompt

c:/> pip install mysql.connector



1. open the mysql command prompt and create a new database and create a table called orders in it

mysql> create database accenture;
mysql> use accenture;
mysql> create table orders(oid int, orderitem varchar(20), quantity int);





2. write the below code and as it as mysqldbconnect.py 

import mysql.connector
from mysql.connector import Error


try:
	conn  =mysql.connector.connect("localhost","accenture","root","root")
	if conn:
		print("Database connection established")
	else:
		print("Not connected")
except(Exception,Error) as error:
	print(error)

3. save and execute the above code.

d:> python mysqldbconnect.py



4. create a configuration file called "local.env" and copy the below configurations
[DB]
username = root
password = root
host = localhost
port = 3306
database = accenture

save and close


5. write the below code for reading the configurations from the config file and save as readdbconfig.py

# This program will read the configuration properties 
# from the configuration file 

import configparser

def read_db_params():
	# read the properties from env file

	config = configparser.ConfigParser()
	config.read('local.env')
	return config
save and close


6. write the below code for establishing  the connection and save as connectmysqldbconfigs.py

import mysql.connector
from mysql.connector import Error

from readdbconfig import *

def connect():
	try:
		# read the env file and get the configurations
		params = read_db_params()
		
		conn = mysql.connector.connect(
				 host = params.get('DB','host'),
				 database = params.get('DB','database'),
				 user = params.get('DB','username'),
				 password = params.get('DB','password'),
				 port = params.get('DB','port')
		)
		return conn
	except(Exception, Error) as error:
		print(error)

save and close


7. write the below code to insert a record into orders table and save as insertdata.py

# python program to read the data from keyboard and insert into table
from connectmysqldbconfigs import *


try:
	conn = connect()
	cursor = conn.cursor()
	sql = "insert into orders(oid,orderitem,quantity) values (%s,%s,%s)"

	toid = int(input("Enter order id"))
	titem = input("Enter order item name")
	tqty = int(input("Enter order quantity"))
	
	data = [(toid,titem,tqty)]
   
	cursor.executemany(sql,data)
	conn.commit()
	print("Record inserted....")

except(Exception,Error) as error:
	print("error")
   
save and execute

8. d:>python insertdata.py
enter the detaials from the keyboard




9. open the mysql and execute the command
	select * from orders;


10. below code for creating table
import mysql.connector
from mysql.connector import Error


try:
	conn  =mysql.connector.connect(host="localhost",database="accenture",user="root",password="root",port="3306")
	if conn:
		print("Database connection established")
	else:
		print("Not connected")
	cursor = conn.cursor()
	sql = "create table orders(oid int not null, orderitem varchar(20), quantity int)";
	cursor.execute(sql)
	print("Table is created")
except(Exception,Error) as error:
	print(error)


11. code to display all the records from the table

# python program to display the records of the given table
from connectmysqldbconfigs import *
from utils import *

try:
	conn = connect()
	cursor = conn.cursor()
	cnt = get_records_count(cursor)
	if cnt == 0:
		print("NO records found")
	else:
		sql = "select * from orders"
		cursor.execute(sql)
		records = cursor.fetchall()
		print("Orders Information")
		print("------------------")
		for record in records:
			print("Order id = {}, Description = {}, Quantity = {}".format(record[0],record[1],record[2]))
except(Exception,Error) as error:
	print("error")


12. create a file called utils.py and copy below code


def get_records_count(cursor):
	cursor.execute("select * from dept")
	return len(cursor.fetchall())

 

13 Code for deleting a record from table
from connectmysqldbconfigs import *


def get_by_id(cursor,eid):
	sql = "select * from orders where oid = %s";
	cursor.execute(sql,[eid])
	return cursor.fetchone()


def delete(conn,eid):
	cursor = conn.cursor()
	query = "delete from orders where oid = %s;"
	try:
		record = get_by_id(cursor,eid)
		if record is None:
			print("Order is not found for given id")
		else:
			cursor.execute(query, [eid])
			conn.commit()
			print("Employedd is = {} deleted".format(eid))
	except(Exception,Error) as error:
		print(error)
	finally:
		if conn is not None:
			cursor.close()
			conn.close()
			print("connections are closed")

if __name__=='__main__':
	n = input("Enter orders id")
	delete(connect(),n)



14. code for updating order item for the given order id.
from connectmysqldbconfigs import *

def get_by_id(cursor,eid):
	sql = "select * from orders where oid = %s";
	cursor.execute(sql,[eid])
	return cursor.fetchone()


def update(conn,eid):
	cursor = conn.cursor()
	query = "update orders set orderitem = %s where oid = %s;"
	try:
		record = get_by_id(cursor,eid)
		if record is None:
			print("Order id is not found")
		else:
			cdata = input("Enter the new item name")
			cursor.execute(query,[cdata,eid])
			conn.commit()
			print("order id {} is updated".format(eid))
	except:
		print("Error occured")
		conn.rollback()
		
	finally:
		if conn is not None:
			cursor.close()
			conn.close()
			print("Connections are closed")

if __name__=='__main__':
	update(connect(),int(input("enter order id to update")))


pip install <modulename>

pip install pandas
pip install sqllite3



Working with SQLite database
----------------------------
import pandas as pd
import sqlite3
conn = sqlite3.connect('testdb.db') 
c = conn.cursor()
c.execute('''
          CREATE TABLE IF NOT EXISTS items
          ([product_id] INTEGER PRIMARY KEY, [product_name] TEXT)
          ''')
c.execute('''
          INSERT INTO items (product_id, product_name)

                VALUES
                (1,'Computer'),
                (2,'Printer'),
                (3,'Tablet'),
                (4,'Desk'),
                (5,'Chair')
          ''')
c.execute('''
          SELECT
          * from
          items
          ''')
df = pd.DataFrame(c.fetchall(), columns=['product_name','price'])
print (df)





